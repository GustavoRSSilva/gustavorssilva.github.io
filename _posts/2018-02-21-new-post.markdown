---
layout: post
title:  "From Web APPs to DAPPs"
date:   2018-02-21
description: A small F.A.Q.
---

<!-- Intro -->
<p class="intro">Blockchain is on vouge, many companies are now discovering how powerfull a descentrelized approach can improve their product (link to article on how a foodchain implemented a blockchain to improve the validation date of its products). Dapps are here to stay, and now it is the best time to learn them. This article will focus on mainly on Ethereum with an enphasis on solidity.</p>

<!-- Basic: where are stored? -->
# Where is the code stored?
While a classic Web API is stored in one or more servers (mainly for Requesting balancing), a Dapp is stored in the block with all its information (see API + database), once the code its mined, it is propagated throw all the different pools.

<!-- Basic: Where is the data stored -->
# Where is the data stored?
In Dapps, the data is stored in the memory (storage). Works a little bit like memory storage in Javascript. Once again this is different, in a API the data can be stored in one or more database.

<!-- Basic: what changes? -->
# What implications does it have?
The fact that Dapps are store in the block, once it is mined, it is impossible to change the main code. It implies a heavy assertment in the base code, you don't want to send the code with bugs just to have people's asstes locked. We can all agree that Ethreum had enough of that, there is a reason we have ethereum and ethereum classic (link to the error in the code).

<!-- Basic: how much does it cost to deploy a Dapp -->
# How to deploy a Dapp
A Dapps is a group of contracts, and in order to fully work the contracts need to be available in the blockchain. Sending an contract is the same as sending a transaction. Once you assign a gas value (see fee) that contract and send it, the miners will try to mine it to create a new block.
